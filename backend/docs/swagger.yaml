basePath: /api/v1
definitions:
  controllers.CreateProjectRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controllers.EventRequest:
    properties:
      app_version:
        type: string
      device_id:
        type: string
      event_name:
        type: string
      event_type:
        type: string
      os_version:
        type: string
      parameters:
        additionalProperties: true
        type: object
      platform:
        type: string
      timestamp:
        type: string
    required:
    - app_version
    - device_id
    - event_name
    - event_type
    - os_version
    - platform
    type: object
  controllers.EventsRequest:
    properties:
      events:
        items:
          $ref: '#/definitions/controllers.EventRequest'
        type: array
    required:
    - events
    type: object
  controllers.InstallationRequest:
    properties:
      app_version:
        type: string
      device_id:
        type: string
      os_version:
        type: string
      platform:
        type: string
      properties:
        additionalProperties: {}
        type: object
    required:
    - app_version
    - device_id
    - os_version
    - platform
    type: object
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.LoginResponse:
    properties:
      expires_at:
        type: string
      token:
        type: string
      user:
        properties:
          email:
            type: string
          id:
            type: string
          name:
            type: string
          role:
            type: string
        type: object
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Device:
    properties:
      app_version:
        description: Game version
        type: string
      country:
        description: Country based on IP (optional)
        type: string
      created_at:
        type: string
      device_id:
        description: Client-generated device identifier
        type: string
      events:
        items:
          $ref: '#/definitions/models.Event'
        type: array
      first_seen:
        description: First session timestamp
        type: string
      id:
        type: string
      ip_address:
        description: Hashed/anonymized IP address
        type: string
      last_seen:
        description: Last session timestamp
        type: string
      os_version:
        description: e.g., "10.0", "Android 11"
        type: string
      platform:
        description: iOS, Android, Windows, etc.
        type: string
      project_id:
        type: string
      updated_at:
        type: string
    type: object
  models.Dimensions:
    additionalProperties:
      type: string
    type: object
  models.Event:
    properties:
      created_at:
        type: string
      device_id:
        type: string
      event_name:
        description: For custom events
        type: string
      event_type:
        $ref: '#/definitions/models.EventType'
      id:
        type: string
      parameters:
        allOf:
        - $ref: '#/definitions/models.Parameters'
        description: JSON parameters
      project_id:
        type: string
      received_at:
        description: When event was received by server
        type: string
      timestamp:
        description: When event occurred (client-side)
        type: string
      updated_at:
        type: string
    type: object
  models.EventType:
    enum:
    - session_start
    - session_end
    - install
    - uninstall
    - custom
    type: string
    x-enum-varnames:
    - SessionStart
    - SessionEnd
    - Install
    - Uninstall
    - Custom
  models.Metric:
    properties:
      created_at:
        type: string
      dimensions:
        $ref: '#/definitions/models.Dimensions'
      id:
        type: string
      metric_type:
        $ref: '#/definitions/models.MetricType'
      period:
        $ref: '#/definitions/models.PeriodType'
      period_start:
        type: string
      project_id:
        type: string
      updated_at:
        type: string
      value:
        type: number
    type: object
  models.MetricType:
    enum:
    - dau
    - mau
    - new_users
    - session_count
    - session_length
    - event_count
    - retention_rate
    type: string
    x-enum-varnames:
    - DailyActiveUsers
    - MonthlyActiveUsers
    - NewUsers
    - SessionCount
    - SessionLength
    - EventCount
    - RetentionRate
  models.Parameters:
    additionalProperties: true
    type: object
  models.PeriodType:
    enum:
    - hourly
    - daily
    - weekly
    - monthly
    - yearly
    - total
    type: string
    x-enum-varnames:
    - Hourly
    - Daily
    - Weekly
    - Monthly
    - Yearly
    - Total
  models.Project:
    properties:
      api_key:
        description: Not always exposed in responses
        type: string
      created_at:
        type: string
      devices:
        items:
          $ref: '#/definitions/models.Device'
        type: array
      events:
        items:
          $ref: '#/definitions/models.Event'
        type: array
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/models.Project'
        type: array
      role:
        description: '''admin'' or ''developer'''
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@kogase.io
    name: API Support
    url: http://www.kogase.io/support
  description: Backend API for Kogase game telemetry system
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Kogase Telemetry API
  version: "1.0"
paths:
  /analytics/devices:
    get:
      consumes:
      - application/json
      description: Get devices
      parameters:
      - description: Platform
        in: query
        name: platform
        type: string
      - description: First seen date (ISO 8601)
        in: query
        name: start_date
        type: string
      - description: Last seen date (ISO 8601)
        in: query
        name: end_date
        type: string
      - description: Limit (default 100)
        in: query
        name: limit
        type: integer
      - description: Offset (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Device'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get devices
      tags:
      - analytics
  /analytics/events:
    get:
      consumes:
      - application/json
      description: Get events
      parameters:
      - description: Event type
        in: query
        name: event_type
        type: string
      - description: Event name
        in: query
        name: event_name
        type: string
      - description: Start date (ISO 8601)
        in: query
        name: start_date
        type: string
      - description: End date (ISO 8601)
        in: query
        name: end_date
        type: string
      - description: Device ID
        in: query
        name: device_id
        type: string
      - description: Platform
        in: query
        name: platform
        type: string
      - description: Limit (default 100)
        in: query
        name: limit
        type: integer
      - description: Offset (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get events
      tags:
      - analytics
  /analytics/metrics:
    get:
      consumes:
      - application/json
      description: Get analytics metrics
      parameters:
      - description: Metric type
        in: query
        name: metric_type
        type: string
      - description: Start date (ISO 8601)
        in: query
        name: start_date
        type: string
      - description: End date (ISO 8601)
        in: query
        name: end_date
        type: string
      - description: Period (hourly, daily, weekly, monthly, yearly, total)
        in: query
        name: period
        type: string
      - description: Dimensions to group by
        in: query
        name: dimensions
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Metric'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get metrics
      tags:
      - analytics
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and receive JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate current JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get current authenticated user information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration details
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - auth
  /projects:
    get:
      consumes:
      - application/json
      description: Get all projects accessible by the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Project details
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create project
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get a specific project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get project
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update a project's details
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project details
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update project
      tags:
      - projects
  /projects/{id}/apikey:
    get:
      consumes:
      - application/json
      description: Get the API key for a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get API key
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Regenerate the API key for a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Regenerate API key
      tags:
      - projects
  /sdk/installation:
    post:
      consumes:
      - application/json
      description: Record a new installation event
      parameters:
      - description: Installation data
        in: body
        name: installation
        required: true
        schema:
          $ref: '#/definitions/controllers.InstallationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Record installation
      tags:
      - sdk
  /telemetry/events:
    post:
      consumes:
      - application/json
      description: Record a telemetry event
      parameters:
      - description: Event details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/controllers.EventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Record event
      tags:
      - telemetry
  /telemetry/events/batch:
    post:
      consumes:
      - application/json
      description: Record multiple telemetry events in a batch
      parameters:
      - description: Events batch
        in: body
        name: events
        required: true
        schema:
          $ref: '#/definitions/controllers.EventsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Record events batch
      tags:
      - telemetry
  /telemetry/install:
    post:
      consumes:
      - application/json
      description: Record an installation event
      parameters:
      - description: Install details
        in: body
        name: install
        required: true
        schema:
          $ref: '#/definitions/controllers.EventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Record install
      tags:
      - telemetry
  /telemetry/session/end:
    post:
      consumes:
      - application/json
      description: End a session for a device
      parameters:
      - description: Session end details
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/controllers.EventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: End session
      tags:
      - telemetry
  /telemetry/session/start:
    post:
      consumes:
      - application/json
      description: Start a new session for a device
      parameters:
      - description: Session start details
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/controllers.EventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Start session
      tags:
      - telemetry
schemes:
- http
- https
swagger: "2.0"
